1 	БІЗНЕС-ВИМОГИ
1.1 	 Передумови


    Футбол залишається одним з найпопулярніших спортивних видів у
світі, з великою кількістю команд на різних рівнях. З цим ростом інтересу
зростає і попит на засоби автоматизації для більш ефективного управління
командами. Для досягнення успіху в сучасному футболі важливо
аналізувати велику кількість даних, таких як статистика гравців, тренувань,
та результати матчів. Система автоматизації може спростити цей процес і
зробити його більш ефективним.


1.2 	Бізнес-можливості


    В IT командах дуже широко використовується такий сайт, як “Trello”,
що надає учаснику команди усю необхідну інформацію щодо розробки та
конкретно свої завдання. Цей продукт показує наскільки автоматизована
система допомагає розвиватися команді.
Таким чином користуючись моєю програмою гравцю буде надана
можливість швидко та зручно отримувати завдання на матч, тренування,
зв’язуватися тренеру з гравцями, а також гравцю отримувати оцінку лікарів
клубу щодо його здоров’я, що дуже безпечно в умовах надзвичайних
навантажень.


2 	КОНЦЕПЦІЯ РІШЕННЯ
2.1 	 Окреслення концепції


    Наше концепція полягає в тому, щоб революціонізувати світ
футбольного менеджменту за допомогою передової та комплексної системи
програмного забезпечення. Наша система керування футбольною
командою прагне стати передовою платформою, яка дає змогу тренерам,
гравцям і адміністраторам досягти вершини продуктивність, ефективність і
досконалість.
    Ми уявляємо майбутнє, у якому кожна футбольна команда, від
масової до професійної, бездоганно інтегрує наше інноваційне програмне
забезпечення для оптимізації своїх операцій. Наша система слугуватиме
серцевиною футбольних організацій, полегшуючи керування всіма
аспектами спорту з неперевершеною легкістю та точністю.


2.2     Головна функціональність


Р-1 Гравець:
    Ф-1: Скринька повідомлень – користувач має можливість
    переглядати повідомлення від членів клубу.
    Ф-2: Чат – дозволяє вести діалог з членом клубу.
    Ф-3: Кімната футболу – перегляд інструкцій на наступний матч,
    тренування, а також їх розбір після кінця.
    Ф-4: Профіль – можливість редагувати особливу про себе
    інформацію.
    Ф-5: Розклад – дивитись розклад матчей та тренувань.
Р-2 Тренер:
    Ф-6: Скринька повідомлень – користувач має можливість
    переглядати та відправляти повідомлення членам клубу.
    Ф-7: Кімната футболу – розміщення розбору матчей або
    тренувань у зручному вигляді.
    Ф-8: Розклад – можливість змінювати розклад матчей та
    тренувань.
    Ф-9: Відправляти запрошення до команди гравцям без клубів,
    та видаляти їх.
    Ф-10: Реєструвати медика команди та звільняти його.
Р-3 Медик:
    Ф-11: Скринька повідомлень – відправляти повідомлення
    гравцям.
    Ф-12: Розробляти курс лікування гравця.
Р-4 Адміністратор:
    Ф-13: Повідомляти усіх клієнтів сайту щодо змінення
    функціоналу або правил сайту.
    Ф-14: Змінювати вартість та послуги що надає підписка.
2.3 Assumptions and Dependencies (Припущення та залежності)
З-1: Платформа буде залежить від стабільного та безпечного
платіжного шлюзу для проведення транзакції.
З-2: Розробка програмного продукту буде залежить від сторонніх
фреймворків та бібліотек.
З-3: Бази даних для зберігання даних клієнтів та хостинг сервіс для
деплоя платформи.
    П-1: Користувачі побажають використати QR code для швидкої
    синхронізації веб додатку з мобільним.
    П-2: Для відповіді на поставлену задачу користувачем, нам потрібні
    потужні сервера та безперервне підключення до них.
    П-3: Швидкість оновлення інформації у нашому додатку залежить
    від завантаженості серверів.


3	РАМКИ ТА ОБМЕЖЕННЯ
3.1	   Рамки первинного випуску


    1) Реєстрація та авторизація: Надає можливість лише іншому
адміністратору створити обліковий запис для нового адміністратора та
авторизуватися в системі для доступу до функцій управління.
    2) Перегляд состав команди та профіль користувача: Дозволяє
адміністраторам та користувачам переглядати інформацію про командний
штаб та особистий профіль з детальною інформацією.
    3) Чат клубу: Забезпечує можливість спілкування та обміну
повідомленнями між учасниками клубу в режимі реального часу.
    4) Можливість розробляти розклад тренувань та матчів: Дозволяє
тренерам створювати та оновлювати графік тренувань і матчів для
команди.
    5) Додавання та видалення членів клубу: Надає директорам
можливість додавати нових членів до команди та видаляти їх при
необхідності.
    6) Можливість придбати підписку для використання сайту: Дозволяє
директорам придбати платну підписку для отримання розширених функцій
та послуг на веб-сайті.
    7) Синхронізація веб та мобільних додатків: Забезпечує інтеграцію та
однаковий функціонал на веб-сайті та мобільних додатках для зручного
доступу до інформації та функцій.
    8) Розробка курсу лікування для гравця: Надає можливість
створювати та ведення курси лікування для гравців у випадку травм або
інших медичних потреб.
    9) Створення та редагування профіля: Дозволяє користувачам
створювати свій особистий профіль та редагувати інформацію в ньому.
    10) Відправка повідомлень: Забезпечує можливість відправки
текстових повідомлень між користувачами системи для спілкування та
обміну інформацією.


3.2	  Рамки наступних випусків


1) Вибір мови інтерфейсу (англійська або українська).
2) Публікувати у профілі пости.
3) Коментування та можливість лайкати/дізлайкати.


4	БІЗНЕС-КОНТЕКСТ
4.3	   Робоче середовище


Програмна система буде використовуватися користувачами з різних країн, тому надзвичайно важливо забезпечити безперебійний доступ. Це буде забезпечено за допомогою хмарних сервісів Amazon Web Service. В робочому середовищі основні компоненти представлені наступним чином:
-	Мова програмування: Система буде розроблена з використанням мови програмування C#, що забезпечить швидке та ефективне виконання завдань.
-	База даних: У ролі бази даних буде використано MongoDB. Це гарантує надійне зберігання даних і швидкий доступ до них.
-	Фреймворк: Серверна частина буде розроблена з використанням Nest.js, що забезпечить високу ефективність додатку.
-	Користувацький інтерфейс: Для створення клієнтської частини проекту буде використана бібліотека React з використанням мови програмування TypeScript.
-	Забезпечення безпеки: Планується використання протоколу HTTPS для забезпечення зашифрування даних під час їх передачі, а також впровадження сучасних методів аутентифікації та авторизації для захисту від несанкціонованого доступу.
-	Доступність та надійність: Система буде розміщена на сервері Azure з можливістю створення резервних копій та аварійного відновлення. Застосунок буде доступний для користувачів цілодобово без значних перерв у роботі.